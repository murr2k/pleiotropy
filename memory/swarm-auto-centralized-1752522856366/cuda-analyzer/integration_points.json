{
  "1_compute_backend": {
    "location": "rust_impl/src/compute_backend.rs",
    "description": "Main entry point for CPU/GPU switching",
    "methods": [
      "build_codon_vectors",
      "decrypt_sequences",
      "calculate_codon_bias"
    ],
    "pattern": "Add new method for prime factorization with GPU acceleration"
  },
  "2_cuda_accelerator": {
    "location": "rust_impl/src/cuda/mod.rs",
    "description": "CudaAccelerator struct manages all GPU operations",
    "existing_operations": [
      "count_codons",
      "calculate_frequencies",
      "match_patterns",
      "eigenanalysis"
    ],
    "recommendation": "Add prime_factorization method to CudaAccelerator"
  },
  "3_kernel_module": {
    "location": "rust_impl/src/cuda/kernels/",
    "description": "Directory for CUDA kernel implementations",
    "recommendation": "Create prime_factorizer.rs module with CUDA kernels"
  },
  "4_performance_monitoring": {
    "location": "rust_impl/src/cuda/performance.rs",
    "description": "Performance metrics tracking",
    "recommendation": "Integrate prime factorization timing into existing metrics"
  }
}